// Code generated by MockGen. DO NOT EDIT.
// Source: poc/app (interfaces: IAppContext)

// Package app_mock is a generated GoMock package.
package app_mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIAppContext is a mock of IAppContext interface.
type MockIAppContext struct {
	ctrl     *gomock.Controller
	recorder *MockIAppContextMockRecorder
}

// MockIAppContextMockRecorder is the mock recorder for MockIAppContext.
type MockIAppContextMockRecorder struct {
	mock *MockIAppContext
}

// NewMockIAppContext creates a new mock instance.
func NewMockIAppContext(ctrl *gomock.Controller) *MockIAppContext {
	mock := &MockIAppContext{ctrl: ctrl}
	mock.recorder = &MockIAppContextMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAppContext) EXPECT() *MockIAppContextMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIAppContext) Get(arg0 string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockIAppContextMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIAppContext)(nil).Get), arg0)
}

// Set mocks base method.
func (m *MockIAppContext) Set(arg0 string, arg1 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", arg0, arg1)
}

// Set indicates an expected call of Set.
func (mr *MockIAppContextMockRecorder) Set(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockIAppContext)(nil).Set), arg0, arg1)
}
